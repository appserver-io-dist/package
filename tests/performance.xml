<?xml version="1.0"?>
<!DOCTYPE project>
<project name="appserver-io-dist/package-tests-performance" basedir=".." default="run-performance-tests">

    <!-- ==================================================================== -->
    <!-- Runs all available performance tests                                 -->
    <!-- ==================================================================== -->
    <target name="local-run-performance-tests" depends="ensure-dist-installed, prepare-reports">
        <!-- test if the jmeter testplan runs through without errors -->
        <antcall target="measure-jmeter-example-testplan" />
    </target>

    <!-- ==================================================================== -->
    <!-- Runs all available performance tests within a vagrant box we start   -->
    <!-- and destroy automatically                                            -->
    <!-- ==================================================================== -->
    <target name="run-performance-tests">
        <!-- start our vagrant box -->
        <antcall target="start-vagrant-test-box" />
        <!-- invoke original performance tests within vagrant box -->
        <antcall target="vagrant-run-performance-tests" />
        <!-- destroy the box after all work is done -->
        <antcall target="destroy-vagrant-box" />
    </target>

    <!-- ==================================================================== -->
    <!-- Runs all available performance tests within an expected vagrant VM   -->
    <!-- ==================================================================== -->
    <target name="vagrant-run-performance-tests">
        <!-- map the vagrant name according to the expected environment -->
        <property name="vagrant-box.name" value="${vagrant-box.prefix}Test" />
        <!-- invoke original performance tests within vagrant box -->
        <exec dir="${temp.dir}" executable="sh" errorproperty="test.failed">
            <arg value="-c" />
            <arg value='vagrant ssh-config | ssh -F /dev/stdin ${vagrant-box.name} "sudo ant local-run-performance-tests -buildfile ${vagrant.basedir}/build.xml -Dgithub.oauth.token=${github.oauth.token} -Dbuild.number=${build.number} -Dtarget-os.major.version=${target-os.major.version} -Dtarget-os.minor.version=${target-os.minor.version} -Dappserver.runtime.version=${appserver.runtime.version} -Dappserver.runtime.build=${appserver.runtime.build} -Dappserver.src.version=${appserver.src.version}"' />
        </exec>
        <!-- eliminate the possiblity of empty but existing error output -->
        <property name="test.failed" value=""/>
        <condition property="fatal-error.occured" value="${test.failed}">
            <not>
                <equals arg1="${test.failed}" arg2=""/>
            </not>
        </condition>
        <!-- check for a specific build failure and make an emergency destroy -->
        <antcall target="destroy-vagrant-box-on-error" />
        <!-- tell them about any failures we might encountered -->
        <fail if="fatal-error.occured" message="The performance test failed with message '${fatal-error.occured}', see log above." />
    </target>

    <!-- ==================================================================== -->
    <!-- Tests if the jmeter testplan configured against the example app      -->
    <!-- does run without any errors                                          -->
    <!-- ==================================================================== -->
    <target name="measure-jmeter-example-testplan">
        <!-- test if the testplan runs through -->
        <exec executable="${jmeter.vagrant.basedir}/${jmeter.package.name}/bin/jmeter" failonerror="true">
            <arg line="-n -t ${jmeter.example-test.path}/example-testplan.jmx -l ${vagrant-reports.dir}/performance-example-testplan.jtl"/>
        </exec>
    </target>

</project>
